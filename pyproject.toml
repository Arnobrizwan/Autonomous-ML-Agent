[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "autonomous-ml-agent"
version = "0.1.0"
description = "Autonomous ML agent for tabular data with LLM-guided hyperparameter optimization"
authors = [{name = "AML Agent Team", email = "team@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "scikit-learn>=1.3.0,<2.0.0",
    "pandas>=2.0.0,<3.0.0",
    "numpy>=1.24.0,<2.0.0",
    "optuna>=3.0.0,<4.0.0",
    "joblib>=1.3.0,<2.0.0",
    "pydantic>=2.0.0,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",
    "typer>=0.9.0,<1.0.0",
    "fastapi>=0.100.0,<1.0.0",
    "uvicorn>=0.23.0,<1.0.0",
    "rich>=13.0.0,<14.0.0",
    "plotly>=5.15.0,<6.0.0",
    "shap>=0.42.0,<1.0.0",
    "eli5>=0.13.0,<1.0.0",
    "pyyaml>=6.0,<7.0",
    "python-multipart>=0.0.6,<1.0.0",
    "httpx>=0.24.0,<1.0.0",
]

[project.optional-dependencies]
mlflow = ["mlflow>=2.5.0"]
openai = ["openai>=1.0.0"]
gemini = ["google-generativeai>=0.3.0"]

[project.scripts]
aml = "aml_agent.ui.cli:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-ra -q --strict-markers --durations=10 --maxfail=3"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "unit: Fast unit tests (isolated, <1s each)",
    "integration: Integration tests (with dependencies, 1-10s each)",
    "slow: Slow tests (performance, large datasets, >10s each)",
    "smoke: Critical smoke tests (basic functionality)",
    "regression: Regression tests",
    "benchmark: Performance benchmark tests",
    "ml: ML-specific tests (model training, evaluation)"
]
filterwarnings = [
    "ignore::sklearn.exceptions.ConvergenceWarning",
    "ignore::DeprecationWarning:sklearn.utils._tags",
    "ignore:.*CatBoostClassifier.*__sklearn_tags__.*:DeprecationWarning",
    "ignore::UserWarning:pydantic",
    "ignore::DeprecationWarning:pandas"
]
cache_dir = ".pytest_cache"
junit_family = "xunit2"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    ".eggs",
    "*.egg",
    "build",
    "dist",
]

